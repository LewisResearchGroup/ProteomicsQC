version: "3.3"
   
services:
  web:
    build: .
    env_file:
      - ./.env
    environment: 
      - ENVIRONMENT=production
    command: python server.py
    volumes:
      - ./app/:/app/
      - ${DATALAKE}:/datalake/
      - ${MEDIA}:/appmedia/
      - ${STATIC}:/static/
      - ${COMPUTE}:/compute/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    links:
      - redis:redis
    restart: always
  
  db:
    image: postgres:13.4
    env_file:
      - ./.env    
    volumes:
      - ${DB}:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    restart: always
    image: redis:alpine
    ports:
      - "6379:6379"   

  celery:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A main worker -l info --concurrency ${CONCURRENCY}"
    env_file:
      - ./.env
    environment: 
      - ENVIRONMENT=production      
    volumes:
      - ./app/:/app/
      - ${DATALAKE}:/datalake/      
      - ${COMPUTE}:/compute/
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=postgres
    depends_on:
      - db
      - redis
      - web
    container_name: celery_worker

  
  monitorix:
    restart: always
    image: jpdus/rpi-monitorix
    ports:
      - "8080:8080"
    environment:
      - MONITORIX_PORT=8080
    